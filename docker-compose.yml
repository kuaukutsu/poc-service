x-services-volume:
  &services-volume
  - type: bind
    source: ./src
    target: /src
  - type: bind
    source: ./vendor
    target: /vendor

x-default-logging:
  &default-logging
  driver: local
  options:
    max-size: "1m"
    max-file: "3"

services:
  fpm:
    container_name: poc_service_fpm
    profiles: [ "serve" ]
    build:
      context: .docker/php/fpm
      target: app_devel
      args:
        UID: ${USER:-1}
        WORKDIR: "/src"
    networks:
      - poc-service
    volumes: *services-volume
    logging: *default-logging

  cli:
    container_name: poc_service_cli
    profiles: [ "cli" ]
    build:
      context: .docker/php/cli
      target: app_devel
      args:
        UID: ${USER:-1}
        WORKDIR: "/src"
    networks:
      - poc-service
    volumes: *services-volume
    logging: *default-logging

  proxy:
    container_name: poc_service_proxy
    profiles: [ "serve" ]
    build:
      context: .docker/proxy/traefik
    command:
      - "--accesslog"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=poc-service"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashbord-proxy.entrypoints=web"
      - "traefik.http.routers.dashbord-proxy.rule=Host(`traefik.localhost`)"
      - "traefik.http.services.dashbord-proxy.loadbalancer.server.port=8080"
    networks:
      - poc-service
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging: *default-logging

  nginx:
    container_name: poc_service_nginx
    profiles: [ "serve" ]
    build:
      context: .docker/proxy/nginx
    depends_on:
      - fpm
      - proxy
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.fpm.entrypoints=web"
      - "traefik.http.routers.fpm.rule=Host(`fpm.localhost`)"
      - "traefik.http.services.fpm.loadbalancer.server.port=80"
    networks:
      - poc-service
    volumes: *services-volume
    logging: *default-logging

  agw:
    container_name: poc_service_agw
    profiles: [ "serve" ]
    build:
      context: .docker/agw/krakend
    depends_on:
      - nginx
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agw.entrypoints=web"
      - "traefik.http.routers.agw.rule=Host(`api.localhost`)"
      - "traefik.http.services.agw.loadbalancer.server.port=8088"
    networks:
      - poc-service
    volumes: *services-volume
    logging: *default-logging

networks:
  poc-service:
